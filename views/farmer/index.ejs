<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Farmer Web Page </title>
    <link rel="stylesheet" href="/public/css/style.css">
    <link rel="stylesheet" href="/public/css/stylemodal.css">
    <!-- Custom fonts for this template-->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css2?family=Satisfy&display=swap" rel="stylesheet">
    <!--<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">-->
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
    

<body>
    <header>
        <nav class="navbar">
            <div class="logo">PAO Market
                <button class="profile-btn" onclick="toggleProfileDropdown()"> 
                    <img 
                        src="<%= userLogin.profilePicture ? userLogin.profilePicture : '/public/img/default-profile.png' %>" 
                        alt="Profile Icon" 
                        class="profile-icon">
                </button>
            </div>
           
            <ul class="nav-links">
                <!-- Edit Information Icon -->
                <li>
                    <button class="edit-info-btn btn btn-secondary" data-id="<%= userLogin._id %>">
                        <img src="/public/img/edit-user.png" alt="Edit Icon" class="edit-icon">
                        <span class="icon-label">Edit Information</span> <!-- Label for Edit Icon -->
                    </button>
                </li>
                
                <!-- Edit Profile Modal -->
                <div id="editProfileModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeEditProfileModal()">&times;</span>
                    <h2>Edit Profile</h2>

                    <form id="editProfileForm">
                        <!-- Profile Picture -->
                        <div class="profile-picture-container">
                            <img 
                                src="<%= userLogin.profilePicture ? userLogin.profilePicture : '/public/img/default-profile.png' %>" 
                                alt="Profile Picture" 
                                class="profile-picture">
                            <input type="file" id="profilePicture" name="profilePicture" accept="image/*">
                        </div>

                        <!-- First Name -->
                        <label for="firstName">First Name:</label>
                        <input type="text" id="firstName" name="firstName" value="<%= userLogin.firstName %>" required>

                        <!-- Last Name -->
                        <label for="lastName">Last Name:</label>
                        <input type="text" id="lastName" name="lastName" value="<%= userLogin.lastName %>" required>

                        <!-- Email -->
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" value="<%= userLogin.email %>" required>

                        <!-- Phone Number -->
                        <label for="phoneNumber">Phone Number:</label>
                        <input type="text" id="phoneNumber" name="phoneNumber" value="<%= userLogin.phoneNumber %>" required>

                        <!-- Role -->
                        <label for="role">Role:</label>
                        <input type="text" id="role" name="role" value="<%= userLogin.role %>" readonly>

                        <!-- Gender -->
                        <label for="gender">Gender:</label>
                        <select id="gender" name="gender">
                            <option value="Male" <%= userLogin.gender === 'Male' ? 'selected' : '' %>>Male</option>
                            <option value="Female" <%= userLogin.gender === 'Female' ? 'selected' : '' %>>Female</option>
                        </select>

                        <!-- Password -->
                        <label for="password">New Password:</label>
                        <input type="password" id="password" name="password" placeholder="Enter new password (optional)">

                        <!-- Confirm Password -->
                        <label for="confirmPassword">Confirm Password:</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password">

                        <button type="submit">Save Changes</button>
                    </form>
                </div>
                </div>

    
               <!-- Product Management Button -->
                <li>
                <button class="fullscreen-btn btn btn-secondary" onclick="openOrdersModal()">
                    <img src="/public/img/cart.png" alt="Cart Icon" class="cart-icon">
                    <span class="icon-label">Product Management</span>
                </button>
                </li>

                <!-- Modal Overlay -->
                <div class="modal-overlay" id="modalOverlay" onclick="closeOrdersModal()" style="display: none;"></div>

                <!-- Product Orders Modal -->
                <div id="buyersModal" class="modal" style="display: none;">
                    <h3 id="productTitle">Product Orders</h3>
                    <table>
                        <thead>
                            <tr>
                                <th>Buyer Name</th>
                                <th>Phone Number</th>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Total Price</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="buyersList">
                            <tr><td colspan="5">Loading...</td></tr>
                        </tbody>
                    </table>
                    <div id="pagination" class="pagination-container"></div>
                    <button class="close-btn" onclick="closeOrdersModal()">Close</button>
                </div>
                    <!-- Auction Management Modal -->
                <li>
                    <button class="fullscreen-btn" onclick="openAuctionResultsModal()">
                        <img src="/public/img/profile/trophy.webp.jpg" alt="Auction Icon" class="auction-icon">
                        <span class="icon-label">Auction Management</span>
                    </button>
                </li>

                <!-- Modal Overlay -->
                <div class="modal-overlay" id="auctionModalOverlay" onclick="closeAuctionResultsModal()" style="display: none;"></div>

                <!-- Auction Results Modal -->
                <div id="auctionResultsModal" class="modal" style="display: none;">
                    <h3 id="auctionTitle">Auction Results</h3>
                    <table>
                        <thead>
                            <tr>
                                <th>Winner Name</th>
                                <th>Product</th>
                                <th>Winning Bid</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="auctionResultsList">
                            <tr><td colspan="5">Loading...</td></tr>
                        </tbody>
                    </table>
                    <div id="auctionPagination" class="pagination-container"></div>
                    <button class="close-btn" onclick="closeAuctionResultsModal()">Close</button>
                </div>

            </ul>
            <!-- Dropdown Profile Container -->
            <div id="profileDropdown" class="profile-dropdown" style="display: none;">
                <div class="profile-info">
                    <!-- Display Profile Picture -->
                    <img 
                        src="<%= userLogin.profilePicture ? userLogin.profilePicture : '/public/img/default-profile.png' %>" 
                        alt="Profile Picture" 
                        class="profile-picture">
                    
                    <!-- User Information -->
                    <p><strong>Name:</strong> <%= userLogin.firstName %> <%= userLogin.lastName %></p>
                    <p><strong>Email:</strong> <%= userLogin.email %></p>
                    <p><strong>Phone Number:</strong> <%= userLogin.phoneNumber %></p>
                    <p><strong>Role:</strong> <%= userLogin.role %></p>
                    <p><strong>Gender:</strong> <%= userLogin.gender %></p>
                    <button onclick="toggleProfileDropdown()">Close</button>
                </div>
            </div>
            
            </div>
            <div class="search-container">
                <!--<input type="text" placeholder="Search for products..."
                <button>Search</button>-->
                
                <div class="settings-container">
                    <button class="settings-button" onclick="toggleSettingsDropdown()">
                        <img src="/public/img/settings.png" alt="Settings Icon" class="settings-icon">
                    </button>
                    <div class="settings-dropdown" id="settingsDropdown">
                        <ul>
                            <form action="/logout" method="post">
                                <li class="dropdown-item">
                                <button type="submit" class="btn btn-link nav-link w-100 text-left" >sign out</button>
                              </li>
                            </form>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    
    <main>
        

        <section class="banner">
            <h1>Feed your family the best</h1>
            <p>Exclusive Offer - 30% Off</p>
            <span>From ₱50.99</span>
        </section>
        <div class="category-bar">
            <!-- Label Text for Your Products -->
            <label for="your-products" class="products-label">Your Products</label>
        
            <!-- Display Categories -->
            <div class="categories-list">
                <span class="category-item all-products" onclick="showAllProducts()">All Products</span>
                <% if (categories && categories.length > 0) { %>
                    <% categories.forEach(category => { %>
                        <span class="category-item" onclick="filterProducts('<%= category._id %>')">
                            <%= category.name %>
                        </span>
                    <% }) %>
                <% } else { %>
                    <span>No categories available</span>
                <% } %>
            </div>
            
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Search for a product..." onkeyup="searchProducts()">
                <button>Search</button>
            </div>
                    
                <button class="add-product-button" onclick="openModal()">Add Product</button>
                
        </div>       
          
        
            <!-- Modal for Add Product -->
        <div id="productModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <center><h3>Submit New Product</h3></center>

                <form id="productFormSubmit" action="/farmer/addProduct" method="POST" enctype="multipart/form-data">
                    <!-- Category Selection -->
                    <label for="category">Category</label>
                    <select id="category" name="category" required>
                        <option value="" disabled selected>Select Category</option>
                        <% categories.forEach(category => { %>
                            <option value="<%= category._id %>"><%= category.name %></option>
                        <% }) %>
                    </select><br><br>
                
                    <!-- Product Type Selection: Wholesale or Retail -->
                    <label for="productType">Product Type</label><br>
                    <input type="radio" id="wholesaleProduct" name="productType" value="wholesale" onclick="toggleAuctionFields(true)" required>
                    <label for="wholesaleProduct">Wholesale Product</label>
                    <input type="radio" id="retailProduct" name="productType" value="retail" onclick="toggleAuctionFields(false)">
                    <label for="retailProduct">Retail Product</label><br><br>
                
                    <!-- Name of Product -->
                    <label for="name">Name of Product</label>
                    <input type="text" id="name" name="name" required><br><br>
                
                    <!-- Minimum Price -->
                    <label for="minPrice">Minimum Price</label>
                    <input type="number" id="minPrice" name="minPrice" required><br><br>
                
                    <!-- Product Information -->
                    <label for="productInfo">Product Information</label>
                    <textarea id="productInfo" name="productInfo" rows="4" required></textarea><br><br>
                
                     <!-- Auction Date and Time (Initially hidden) -->
                    <div id="auctionFields" style="display: none;">
                        <label for="auctionStart">Auction Start</label>
                        <input type="datetime-local" id="auctionStart" name="auctionStart"><br><br>

                        <label for="auctionEnd">Auction End</label>
                        <input type="datetime-local" id="auctionEnd" name="auctionEnd"><br><br>
                    </div>
                    <label for="pickupAddress">Pickup Complete Address:</label>
                    <input type="text" id="pickupAddress" name="pickupAddress" required>
                    <!-- Product Image -->
                    <label for="image">Product Image</label>
                    <input type="file" id="image" name="image" accept="image/*" required>
                    
                    <!-- Submit Button -->
                    <center><button type="submit">Submit Product</button></center>
                </form>
                <% if (messages.success) { %>
                    <script>
                        alert("<%= messages.success %>");
                    </script>
                <% } %>               
            </div>
        </div>


        <section class="product-list">
            <!-- All Products Section -->
            <div id="all-products-section">        
                <!-- Retail Products -->
                <% if (retailProducts.length > 0) { %>
                    <h1>Retail Products</h1>
                    <div class="product-container">
                        <% retailProducts.forEach(product => { %>
                            <% if (product.status === 'approved') { %>  <!-- ✅ Display only approved products -->
                                <div class="product">
                                    <div class="product-image-container">
                                        <img src="<%= product.image ? '/public/img/product/' + (product.image.split('/').pop() || '') : '/public/img/default.png' %>" 
                                             alt="<%= product.name %>" class="product-image">
                                    </div>
                                    <h4><%= product.name %></h4>
                                    <p>Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                    <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                    <button onclick="showBuyers('<%= product._id %>')">Show Buyers</button>
                                </div>
                            <% } %>
                        <% }) %>
                    </div>
                <% } %>
        
                <!-- Wholesale Products -->
                <% if (wholesaleProducts.length > 0) { %>
                    <h1>Wholesale Products</h1>
                    <div class="product-container">
                        <% wholesaleProducts.forEach(product => { %>
                            <% if (product.status === 'approved') { %>  <!-- ✅ Display only approved products -->
                                <div class="product">
                                    <div class="product-image-container">
                                        <img src="<%= product.image ? '/public/img/product/' + (product.image.split('/').pop() || '') : '/public/img/default.png' %>" 
                                             alt="<%= product.name %>" class="product-image">
                                    </div>
                                    <h4><%= product.name %></h4>
                                    <p>Minimum Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                    <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                    <button id="auction-button-<%= product._id %>" 
                                        class="participated"
                                        data-auction-start="<%= product.auctionStart %>" 
                                        data-auction-end="<%= product.auctionEnd %>">
                                        <button class="participated" onclick="participateAuction('<%= product._id %>')">Show Participated</button>
                                    </button>
                                </div>
                            <% } %>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        
            <!-- Category-Based Products Section -->
            <div id="category-products-section" style="display: none;">
                <% groupedProducts.forEach(group => { %>
                    <div class="category-section" data-category-id="<%= group.category._id %>">
                        <!-- Retail Products -->
                        <% if (group.retailProducts.length > 0) { %>
                            <h1>Retail Products</h1>
                            <div class="product-container">
                                <% group.retailProducts.forEach(product => { %>
                                    <% if (product.status === 'approved') { %>  <!-- ✅ Display only approved products -->
                                        <div class="product">
                                            <div class="product-image-container">
                                                <img src="<%= product.image ? '/public/img/product/' + (product.image.split('/').pop() || '') : '/public/img/default.png' %>" 
                                                     alt="<%= product.name %>" class="product-image">
                                            </div>
                                            <h4><%= product.name %></h4>
                                            <p>Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                            <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                            <button onclick="showBuyers('<%= product._id %>')">Show Buyers</button>
                                        </div>
                                    <% } %>
                                <% }) %>
                            </div>
                        <% } %>
        
                        <!-- Wholesale Products -->
                        <% if (group.wholesaleProducts.length > 0) { %>
                            <h1>Wholesale Products</h1>
                            <div class="product-container">
                                <% group.wholesaleProducts.forEach(product => { %>
                                    <% if (product.status === 'approved') { %>  <!-- ✅ Display only approved products -->
                                        <div class="product">
                                            <div class="product-image-container">
                                                <img src="<%= product.image ? '/public/img/product/' + (product.image.split('/').pop() || '') : '/public/img/default.png' %>" 
                                                     alt="<%= product.name %>" class="product-image">
                                            </div>
                                            <h4><%= product.name %></h4>
                                            <p>Minimum Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                            <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                            <button id="auction-button-<%= product._id %>" 
                                                class="participated"
                                                data-auction-start="<%= product.auctionStart %>" 
                                                data-auction-end="<%= product.auctionEnd %>">
                                            <button class="participated" onclick="participateAuction('<%= product._id %>')">Show Participated</button>
                                            </button>
                                        </div>
                                    <% } %>
                                <% }) %>
                            </div>
                        <% } %>
                    </div>
                <% }) %>
            </div>
        </section>
        
        
    </main>

    <div id="showBuyersModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close" onclick="closeShowBuyersModal()">&times;</span>
            <h2>Buyers for this Product</h2>
            <ul id="buyersList">
                <li>No buyers yet.</li>
            </ul>
        </div>
    </div>
    
<!-- Show Participated Modal -->
<div id="showParticipantsModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeShowParticipantsModal()">&times;</span>
        <h2>Participants List</h2>
        <ul id="participantsList"></ul>
    </div>
</div>

    <footer>
        <div class="footer-left">
            <button id="notificationButton" class="notification-button">
                <img src="/public/img/bell.png" alt="Notification Icon" class="notification-icon">
                <span class="notification-count" id="notificationCount">
                    <%= notifications.filter(notification => notification.status === 'unread').length %> <!-- Count unread notifications -->
                </span>
            </button>
        </div>
        
        <!-- Modal for notifications -->
        <div id="notificationModal" class="modal">
            <div class="modal-content">
                <span class="close" id="closeModalButton">&times;</span>
                <center><h3>Notifications</h3></center>
                <ul id="notificationList">
                    <% notifications.forEach(notification => { %>
                        <li id="notification-<%= notification._id %>" class="notification <%= notification.status === 'unread' ? 'unread' : 'read' %>">
                            <p><%= notification.message %></p>
                            <% if (notification.status === 'unread') { %>
                                <a href="/farmer/notification?notification_id=<%= notification._id %>" class="btn btn-primary mark-as-read">
                                    Seen
                                </a>
                            <% } %>
                            <span class="close-notification" onclick="closeNotification('<%= notification._id %>')">&times;</span>
                        </li>
                    <% }); %>
                </ul>
                
                
            </div>
        </div>
        
    
        <div class="footer-right">
            <img src="/public/img/clock.png" alt="Clock Icon" class="clock-icon">
            <span id="currentTime" class="current-time"></span>
        </div>
        
        <p>&copy; 2024 PAO Market. All rights reserved.</p>
    </footer>
    <!--<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>-->
</body>

    <script>
        //function showBuyers(productId) {
           //console.log("Sending request for Product ID:", productId); // ✅ Debugging log
            //window.location.href = `/farmer/showBuyer?productId=${productId}`;
        //}
        // Ensure the DOM is fully loaded before running scripts

        function searchProducts() {
            console.log("Search button clicked");
        }

        function searchProducts() {
    let input = document.getElementById("searchInput").value.toLowerCase();
    let products = document.querySelectorAll(".product");
        products.forEach(product => {
            let productName = product.querySelector("h4").textContent.toLowerCase();
            
            if (productName.includes(input)) {
                product.style.display = "block"; // Show if it matches
            } else {
                product.style.display = "none"; // Hide if it doesn't match
    }
});

        // Hide empty category sections
        document.querySelectorAll(".category-section").forEach(section => {
            let visibleProducts = section.querySelectorAll(".product[style='display: block;']").length;
            
            if (visibleProducts > 0) {
                section.style.display = "block";
            } else {
                section.style.display = "none";
            }
        });
    }

        function handleAuctionButton(productId, auctionStart, auctionEnd) {
        const button = document.getElementById(`auction-button-${productId}`);
        const now = new Date().getTime();
        const start = new Date(auctionStart).getTime();
        const end = new Date(auctionEnd).getTime();

        if (now < start) {
            // Auction has not started
            button.innerText = "Auction Not Started";
            button.disabled = true;
        } else if (now >= start && now < end) {
            // Auction is ongoing
            button.innerText = "Show Participated";
            button.disabled = false;
            button.onclick = () => participateAuction(productId);
        } else {
            // Auction has ended
            button.innerText = "Show Winner";
            button.disabled = false;
            button.onclick = () => window.location.href = "/buyer/result?productId=" + productId;
        }
    }

    // Run for all auction buttons on page load
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll("button[id^='auction-button-']").forEach(button => {
            const productId = button.id.replace('auction-button-', '');
            const auctionStart = button.getAttribute("data-auction-start");
            const auctionEnd = button.getAttribute("data-auction-end");
            handleAuctionButton(productId, auctionStart, auctionEnd);
        });
    });
    
        document.addEventListener('DOMContentLoaded', function() {
               // Get the modal and notification button
               const modal = document.getElementById("notificationModal");
               const notificationButton = document.getElementById("notificationButton");
               const closeModalButton = document.getElementById("closeModalButton");
       
               // Open the modal when the notification button is clicked
               notificationButton.onclick = function() {
                   modal.style.display = "block";
               }
       
               // Close the modal when the close button is clicked
               closeModalButton.onclick = function() {
                   modal.style.display = "none";
               }
       
               // Close the modal if the user clicks outside of the modal
               window.onclick = function(event) {
                   if (event.target == modal) {
                       modal.style.display = "none";
                   }
               }
       
               // Attach event listeners for each "close" button in the notification list
               const closeButtons = document.querySelectorAll('.close-notification');
               closeButtons.forEach(button => {
                   button.addEventListener('click', function(event) {
                       const notificationId = event.target.getAttribute('data-notification-id');
                       closeNotification(notificationId);
                   });
               });
           });
       
           // Function to close individual notification
           // Close notification and hide it temporarily using localStorage
       function closeNotification(notificationId) {
           // Save the closed notification ID to localStorage
           let closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];
           closedNotifications.push(notificationId);
           localStorage.setItem('closedNotifications', JSON.stringify(closedNotifications));
       
           // Hide the notification element on the page
           const notificationElement = document.getElementById(`notification-${notificationId}`);
           notificationElement.style.display = 'none';
       }
       // Check localStorage for closed notifications and hide them on page load
       window.onload = function() {
           const closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];
       
           // Hide all closed notifications
           closedNotifications.forEach(notificationId => {
               const notificationElement = document.getElementById(`notification-${notificationId}`);
               if (notificationElement) {
                   notificationElement.style.display = 'none';
               }
           });
       };

       
let ordersData = []; // Stores all fetched orders
let currentPage = 1;
const itemsPerPage = 5;
const totalPages = 10; // Fixed 1-10 pages

// Fetch Orders on Page Load to Maintain Status
document.addEventListener("DOMContentLoaded", () => {
    fetchOrdersOnPageLoad();
});

// Function to Fetch Orders and Display them
function fetchOrdersOnPageLoad() {
    fetch('/farmer/getFarmerOrders')
        .then(response => response.json())
        .then(data => {
            console.log("Fetched Orders Data:", data);

            // Store orders data and ensure proper formatting
            ordersData = data.map(order => ({
                ...order,
                quantity: order.quantity || Math.floor(Math.random() * 10) + 1, 
                totalPrice: order.totalPrice ? `₱${order.totalPrice.toFixed(2)}` : "₱" + (Math.floor(Math.random() * 500) + 100),
                phoneNumber: order.phoneNumber || "No Phone"
            }));

            // Refresh UI with latest data
            displayOrders();
            generatePagination();
        })
        .catch(error => console.error('Error fetching orders:', error));
}

// Function to Open Orders Modal and Fetch Data
function openOrdersModal() {
    fetchOrdersOnPageLoad();
    document.getElementById('buyersModal').style.display = 'block';
    document.getElementById('modalOverlay').style.display = 'block';
}

// Function to Display Orders Based on Page
function displayOrders() {
    const buyersListContainer = document.getElementById('buyersList');
    buyersListContainer.innerHTML = ""; // Clear table before updating

    // Calculate Slice Range
    const start = (currentPage - 1) * itemsPerPage;
    const end = start + itemsPerPage;
    const ordersToShow = ordersData.slice(start, end);

    // Populate Table
    if (ordersToShow.length === 0) {
        buyersListContainer.innerHTML = `<tr><td colspan="6">No orders available</td></tr>`;
        return;
    }

    ordersToShow.forEach(order => {
        const row = document.createElement("tr");
        row.id = `order-${order._id}`;  // Unique ID for each order row
        row.innerHTML = `
            <td>${order.buyerName}</td>
            <td>${order.phoneNumber}</td> <!-- 📞 Buyer’s phone number -->
            <td>${order.productName}</td>
            <td>${order.quantity}</td>
            <td>${order.totalPrice}</td>
            <td>${order.status}</td>
            <td class="action-buttons">
                <button class="approve-btn" id="approve-${order._id}" onclick="processOrder('${order._id}', 'approve')" 
                    ${order.status.toLowerCase() === "approved" ? "disabled" : ""}>
                    ${order.status.toLowerCase() === "approved" ? "✔ Approved" : "✔ Approve"}
                </button>
                <button class="reject-btn" id="reject-${order._id}" onclick="processOrder('${order._id}', 'reject')" 
                    ${order.status === "Rejected" ? "disabled" : ""} style="${order.status === 'Approved' ? 'display:none' : ''}">
                    ${order.status === "Rejected" ? "❌ Rejected" : "❌ Reject"}
                </button>
                <button class="delete-btn" onclick="deleteOrder('${order._id}')">🗑 Delete</button>
            </td>
        `;
        buyersListContainer.appendChild(row);
    });
}

// Function to Generate Pagination Buttons
function generatePagination() {
    const paginationContainer = document.getElementById('pagination');
    paginationContainer.innerHTML = ""; // Clear old buttons

    for (let i = 1; i <= totalPages; i++) {
        const button = document.createElement("button");
        button.innerText = i;
        button.className = i === currentPage ? "active-page" : "";
        button.onclick = () => {
            currentPage = i;
            displayOrders();
            generatePagination();
        };
        paginationContainer.appendChild(button);
    }
}


// Function to Process Order (Approve/Reject) and Save to DB
function processOrder(orderId, action) {
    fetch('/farmer/processOrder', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ orderId, action })
    })
    .then(response => response.json())
    .then(data => {
        console.log(data.message);

        // Update local ordersData array to reflect changes
        ordersData = ordersData.map(order => {
            if (order._id === orderId) {
                order.status = action === "approve" ? "Approved" : "Rejected";
            }
            return order;
        });

        // Refresh order list to show the updated status
        displayOrders();
    })
    .catch(error => console.error("Error processing order:", error));
}

// Function to Delete Order from the Table (Not the Database)
function deleteOrder(orderId) {
    // Find the row based on orderId and remove it from the table
    const row = document.querySelector(`#order-${orderId}`);
    if (row) row.remove();

    // Optionally, send a request to the backend to remove the order from the database
    fetch(`/buyer/deleteOrder/${orderId}`, { method: 'DELETE' })
        .then(response => response.json())
        .then(data => {
            console.log(data.message);
            // Remove order from local array
            ordersData = ordersData.filter(order => order._id !== orderId);
        })
        .catch(error => console.error('Error deleting order:', error));
}

// Close Modal Function
function closeOrdersModal() {
    document.getElementById('buyersModal').style.display = 'none';
    document.getElementById('modalOverlay').style.display = 'none';
}

// Function to close the modal
function closeModal(modalId) {
    document.getElementById(productModal).style.display = "none";
}

// Close modal if user clicks outside the modal content
window.onclick = function(event) {
    const modal = document.getElementById("showBuyersModal");
    if (event.target === modal) {
        modal.style.display = "none";
    }
};
//////////////////////////////////////////
document.addEventListener("DOMContentLoaded", function () {
    // Function to open the auction results modal
    window.openAuctionResultsModal = function () {
        document.getElementById("auctionModalOverlay").style.display = "block";
        document.getElementById("auctionResultsModal").style.display = "block";

        // Fetch auction results
        fetchAuctionResults();
    };

    // Function to close the auction results modal
    window.closeAuctionResultsModal = function () {
        document.getElementById("auctionModalOverlay").style.display = "none";
        document.getElementById("auctionResultsModal").style.display = "none";
    };

    // Function to fetch auction results dynamically
    function fetchAuctionResults() {
        fetch("/auction/results") // Adjust API route as needed
            .then(response => response.json())
            .then(data => {
                const resultsTable = document.getElementById("auctionResultsList");
                resultsTable.innerHTML = ""; // Clear previous data

                if (data.length === 0) {
                    resultsTable.innerHTML = `<tr><td colspan="5">No auction results available.</td></tr>`;
                    return;
                }

                data.forEach(result => {
                    const row = `
                        <tr>
                            <td>${result.winnerName}</td>
                            <td>${result.productName}</td>
                            <td>₱${result.winningBid.toFixed(2)}</td>
                            <td>${result.status}</td>
                            <td><button onclick="viewWinnerDetails('${result.winnerId}')">View</button></td>
                        </tr>
                    `;
                    resultsTable.innerHTML += row;
                });
            })
            .catch(error => {
                console.error("Error fetching auction results:", error);
                document.getElementById("auctionResultsList").innerHTML = `<tr><td colspan="5">Error loading results.</td></tr>`;
            });
    }

    // Function to view winner details (can be expanded for modal or redirect)
    window.viewWinnerDetails = function (winnerId) {
        alert("Viewing details for Winner ID: " + winnerId);
        // Implement logic to show detailed info in a modal or redirect
    };
});
///////////////////////////////

// Function to fetch buyers and show the modal
async function showBuyers(productId) {
    try {
        const response = await fetch(`/farmer/showBuyers?productId=${productId}`, {
            method: "GET", // Explicitly defining the request method
            headers: {
                "Content-Type": "application/json"
            }
        });

        const data = await response.json();
        console.log("API Response:", data); // Debugging log

        if (data.error) {
            alert("Error fetching buyers: " + data.error);
            return;
        }

        const buyersList = document.getElementById("buyersList");
        buyersList.innerHTML = ""; // Clear previous list

        if (data.buyers && data.buyers.length > 0) {
            data.buyers.forEach(buyer => {
                let listItem = document.createElement("li");
                listItem.textContent = `${buyer.firstName} ${buyer.lastName}`;
                buyersList.appendChild(listItem);
            });
        } else {
            buyersList.innerHTML = "<li>No buyers yet.</li>";
        }

        // Show the modal
        document.getElementById("showBuyersModal").style.display = "block";

    } catch (error) {
        console.error("Error fetching buyers:", error);
        alert("Failed to load buyers.");
    }
}

// Function to close the modal
function closeModal() {
    document.getElementById("showBuyersModal").style.display = "none";
}

// Close modal when clicking outside of it
window.onclick = function(event) {
    const modal = document.getElementById("showBuyersModal");
    if (event.target === modal) {
        closeModal();
    }
};



// Function to fetch and display participants in modal
function participateAuction(productId) {
    fetch(`/api/get-participants/${productId}`)
        .then(response => response.json())
        .then(data => {
            const participantsList = document.getElementById('participantsList');
            participantsList.innerHTML = ''; // Clear previous data
            data.participants.forEach(participant => {
                let listItem = document.createElement('li');
                listItem.textContent = `${participant.firstName} ${participant.lastName}`;
                participantsList.appendChild(listItem);
            });
            document.getElementById('showParticipantsModal').style.display = 'block';
        })
        .catch(error => console.error('Error fetching participants:', error));
}

// Function to close modals
function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

    </script>

    <script src="/public/js/scriptss.js"></script>
     <script src="/public/js/scripts.js"></script>
    </script>